<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="tzk">
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
    </context:component-scan>
    <!--=============================数据源=================================-->
    <context:property-placeholder location="classpath:c3p0-config.properties"/>
      <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
              <property name="driverClass" value="${jdbc.driverClass}"/>
              <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
              <property name="user" value="${jdbc.user}"/>
              <property name="password" value="${jdbc.password}"/>
              <!-- 如果池中数据连接不够时一次增长多少个 -->
              <property name="acquireIncrement" value="5"/>
              <!-- 初始化数据库连接池时连接的数量 -->
              <property name="initialPoolSize" value="20"/>
              <!-- 数据库连接池中的最大的数据库连接数 -->
              <property name="maxPoolSize" value="25"/>
              <!-- 数据库连接池中的最小的数据库连接数 -->
              <property name="minPoolSize" value="5"/>
          </bean>
    <!--===============================与mybatis的整合=============================-->
    <!--配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--指定全局配置文件位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--指定mapper文件位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--配置可以批量操作的sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <!--BATCH支持批量操作-->
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>
    <!--配置扫描器,将mybatis接口的实现加入到ioc容器mapper:映射,scanner:扫描,Configurer:配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有dao接口的实现加入到ioc容器-->
        <property name="basePackage" value="tzk.dao"/>
    </bean>

    <!--================================事务控制===================================-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制数据源,ps:hibernate控制的是sessionFactory-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--***********************开启事物*******************-->
    <!--开启事物(有两种方式:1.基于注解的;2.基于配置文件的;)ps:最好用配置文件的方法哦-->
    <aop:config>
        <!--***切入点表达式***pointcut:是个表达式，声明了连接点的位置。通知和一个切入点关联，并在满足这个切入点的连接点上运行。-->
        <!--访问权限控制符public可以不写,因为接口的方法必须也默认为public-->
        <!--*:代表所有.第一个*:返回值类型为所有,第二个*:所有类-->
        <!--tzk.service..:tzk.service目录下的所有文件包括其子文件(一个点代表其下的文件,再加一个点就包括其下文件的子文件及其他所有文件)-->
        <!--总的意识就是:返回值类型为所有,tzk.service目录下的所有文件包括其子文件的所有类中的所有方法(参数为任意个)-->
        <aop:pointcut id="txPoint" expression="execution(public * tzk.service..*(..))"/>
        <!--配置事物增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
    <!--配置事物增强,事物如何切入-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--已该切入点链接的所有方法-->
            <tx:method name="*"/>
            <!--  ~~get开始的所有方法  -->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <bean id="msg" class="tzk.been.Msg"></bean>
</beans>